@use '../core/styles/typography';
@use './token-utils' as *;
@forward './core.density';
@forward './core.layout';
@forward './core.state';
@forward './core.variant';

$host-tokens: [display];

@mixin host-configuration {
  @include tokens($includes: $host-tokens);
}

@mixin configuration {
  @include tokens($excludes: $host-tokens);
}

@mixin host {
  display: #{token(display)};
}

@mixin base {
  flex-direction: row;
  align-items: center;
  gap: #{token(inline-gap)};

  display: flex;

  position: relative;
}

@mixin field-disabled {
  opacity: #{token(disabled-opacity)};
}

@mixin container {
  @include typography.style(body2);

  position: relative;
  flex-grow: 1;

  display: flex;

  transition-property: background, outline-color;
  transition-duration: #{token(animation-duration)};
  transition-timing-function: #{token(animation-timing-function)};
  
  box-shadow: #{token(elevation)};
  border-radius: #{token(shape)};
  box-sizing: border-box;
  block-size: #{token(container-block-size, custom)};
  inline-size: 100%;
  padding-inline: #{token(padding-inline)};

  background: #{token(surface-color)};

  color: #{token(on-surface-color)};
}

@mixin label {
  @include typography.style(label2);

  position: relative;
  gap: #{token(label-gap)};

  display: inline-flex;

  color: #{token(label-color)};
}

@mixin label-before {
  content: #{token(required-content)};
  color: #{token(required-color)};
}

@mixin label-after {
  content: #{token(optional-content)};
  color: #{token(optional-color)};
}

@mixin slotted-input {
  outline: none;
  width: 100%;
  height: 100%;
  border: none;
  margin: 0;
  padding: 0;

  background-color: transparent;

  font: inherit;
  color: inherit;
}

@mixin slotted-input-inset {
  padding-block-start: 16px;
}
