@use '../core/styles/typography';
@use './token-utils' as *;
@forward './core.density';
@forward './core.layout';
@forward './core.state';
@forward './core.theme';
@forward './core.variant';

$host-tokens: [display];

@mixin host-configuration {
  @include tokens($includes: $host-tokens);
}

@mixin configuration {
  @include tokens($excludes: $host-tokens);
}

@mixin root-variables {
  // Root
  #{declare(root-flex-direction)}: row;
  #{declare(root-align-items)}: center;
  #{declare(root-gap)}: #{token(inline-gap)};
  #{declare(root-opacity)}: 1;

  // Theme
  #{declare(theme-highest)}: inherit;
  #{declare(theme-high)}: inherit;
  #{declare(theme-medium)}: inherit;
  #{declare(theme-low)}: inherit;
  #{declare(theme-lowest)}: inherit;

  // Container
  #{declare(container-block-size)}: #{token(height-medium)};
  #{declare(container-padding-block)}: 0;
  #{declare(container-border-style)}: #{token(border-style)};
  #{declare(container-border-width)}: #{token(border-width)};
  #{declare(container-border-color)}: #{token(border-color)};

  // Label
  #{declare(label-position)}: relative;
  #{declare(label-padding-block-start)}: 0;
  #{declare(label-padding-inline-start)}: 0;
  #{declare(label-inset-block-start)}: 0;
  #{declare(label-inset-inline-start)}: 0;

  // Label::before
  #{declare(label-before-content)}: none;
  #{declare(label-before-color)}: inherit;

  // Label::after
  #{declare(label-after-content)}: none;
  #{declare(label-after-color)}: inherit;
}

@mixin host {
  display: #{token(display)};
}

@mixin field {
  flex-direction: #{token(root-flex-direction, custom)};
  align-items: #{token(root-align-items, custom)};
  gap: #{token(root-gap, custom)};

  display: flex;

  position: relative;

  opacity: #{token(root-opacity, custom)};
}

@mixin field-disabled {
  opacity: #{token(disabled-opacity)};
}

@mixin container {
  @include typography.style(body2);

  flex-grow: 1;

  display: flex;

  transition-property: outline-color;
  transition-duration: #{token(border-animation-duration)};
  transition-timing-function: #{token(border-animation-timing-function)};
  transition-delay: #{token(border-animation-delay)};
  
  outline-style: #{token(container-border-style, custom)};
  outline-width: #{token(container-border-width, custom)};
  outline-color: #{token(container-border-color, custom)};
  outline-offset: calc(#{token(container-border-width, custom)} * -1);
  box-shadow: #{token(elevation)};
  border-radius: #{token(shape)};
  box-sizing: border-box;
  block-size: #{token(container-block-size, custom)};
  inline-size: 100%;
  padding-block: #{token(container-padding-block, custom)};
  padding-inline: #{token(padding-inline)};

  background: #{token(surface-color)};

  color: #{token(on-surface-color)};
}

@mixin label {
  @include typography.style(label2);

  position: #{token(label-position, custom)};
  inset-block-start: #{token(label-inset-block-start, custom)};
  inset-inline-start: #{token(label-inset-inline-start, custom)};
  gap: #{token(label-gap)};

  display: inline-flex;

  padding-block-start: #{token(label-padding-block-start, custom)};
  padding-inline-start: #{token(label-padding-inline-start, custom)};

  color: #{token(label-color)};
}

@mixin label-before {
  content: #{token(label-before-content, custom)};
  color: #{token(label-before-color, custom)};
}

@mixin label-after {
  content: #{token(label-after-content, custom)};
  color: #{token(label-after-color, custom)};
}

// Slotted

@mixin slotted-input {
  outline: none;
  width: 100%;
  height: 100%;
  border: none;
  margin: 0;
  padding: 0;

  background-color: transparent;

  font: inherit;
  color: inherit;
}

@mixin slotted-input-inset {
  padding-block-start: 16px;
}
