@use './core';
@use '../focus-indicator';
@use '../state-layer';
@use './token-utils' as *;

$inline-label: ':where([label-position=inline-start], [label-position=inline-end], :not([label-position]))';
$extra-small: ':where([density=extra-small], [dense])';
$small: ':not([dense])[density=small]';
$large: ':not([dense])[density=large]';
$extra-large: ':not([dense])[density=extra-large]';
$hover: ':not([disabled]):hover';
$focus: ':not([disabled]):focus-within';

//
// Host
//

:host {
  @include core.host-configuration;
}

:host {
  @include core.host;
}

:host([hidden]) {
  display: none;
}

:host(:focus) {
  outline: none;
}

//
// Base
//

.forge-field {
  @include core.root-variables;
}

.forge-field {
  @include core.configuration;
}

.forge-field {
  @include core.field;
  @include core.outlined;
  @include core.medium;

  .container {
    @include core.container;
  }

  .label {
    @include core.label;

    &::before {
      @include core.label-before;
    }

    &::after {
      @include core.label-after;
    }
  }
}

//
// Required
//

:host([required]) {
  .forge-field {
    @include core.required;
  }
}

//
// Optional
//

:host([optional]) {
  .forge-field {
    @include core.optional;
  }
}

//
// Hover
//

:host(#{$hover}) {
  .forge-field {
    @include core.hover;
  }
}

//
// Focus
//

:host(#{$focus}) {
  .forge-field {
    @include core.focus;
  }
}

//
// Densities
//

:host(#{$extra-small}) {
  .forge-field {
    @include core.extra-small;
    outline: green;
  }
}

:host(#{$small}) {
  .forge-field {
    @include core.small;
    outline: cyan;
  }
}

:host(#{$large}) {
  .forge-field {
    @include core.large;
    outline: blue;
  }
}

:host(#{$extra-large}) {
  .forge-field {
    @include core.extra-large;
    outline: purple;
  }
}

:host([label-position=inset]#{$extra-small}) {
  .forge-field {
    @include core.inset-extra-small;
    outline: green;
  }
}

:host([label-position=inset]#{$small}) {
  .forge-field {
    @include core.inset-small;
    outline: cyan;
  }
}

:host([label-position=inset]#{$large}) {
  .forge-field {
    @include core.inset-large;
    outline: blue;
  }
}

:host([label-position=inset]#{$extra-large}) {
  .forge-field {
    @include core.inset-extra-large;
    outline: purple;
  }
}

//
// Label positions
//

:host([label-position=block-start]) {
  .forge-field {
    @include core.block;
  }
}

:host([label-position=inset]) {
  .forge-field {
    @include core.inset;
    @include core.inset-medium;
  }
}

:host([label-position=none]) {
  .forge-field {
    .label {
      display: none;
    }
  }
}

//
// Invalid
//

:host([invalid]) {
  .forge-field {
    @include core.invalid;
  }
}

//
// Disabled
//

:host([disabled]) {
  .forge-field {
    @include core.field-disabled;
  }
}

//
// Theme
//

@mixin theme($theme) {
  // Primary

  // Secondary
}

@include theme(primary);
@include theme(secondary);
@include theme(tertiary);
@include theme(success);
@include theme(error);
@include theme(warning);
@include theme(info);

//
// Variant
//

:host([variant=plain]) {
  .forge-field {
    @include core.plain;
  }
}

:host([variant=tonal]) {
  .forge-field {
    @include core.tonal;
  }
}

:host([variant=raised]) {
  .forge-field {
    @include core.raised;
  }
}

//
// Slotted
//

.forge-field {
  .container {
    ::slotted(input) {
      @include core.slotted-input;
    }
  }
}

:host([label-position=inset]) {
  .forge-field {
    .container {
      ::slotted(input) {
        @include core.slotted-input-inset;
      }
    }
  }
}
