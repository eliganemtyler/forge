@use '../../core/styles/typography';
@use './token-utils' as *;

@mixin host {
  display: inline-block;
}

@mixin radio {
  position: relative;
  flex-direction: #{token(direction)};
  flex-shrink: 0;
  align-items: center;
  justify-content: #{token(justify)};
  gap: #{token(gap)};

  display: flex;
}

@mixin radio-disabled {
  opacity: #{token(disabled-opacity)};
}

@mixin container {
  position: relative;
  align-items: center;
  justify-content: center;

  display: flex;

  border-radius: 50%;
  inline-size: #{token(state-layer-width)};
  block-size: #{token(state-layer-height)};

  cursor: pointer;
}

@mixin container-disabled {
  cursor: not-allowed;
}

@mixin container-readonly {
  cursor: not-allowed;
}

@mixin background {
  position: relative;
  align-items: center;
  justify-content: center;
  
  display: flex;
  
  box-sizing: border-box;
  border-radius: #{token(shape)};
  border-width: #{token(border-width)};
  border-style: solid;
  border-color: #{token(unchecked-border-color)};
  inline-size: #{token(width)};
  block-size: #{token(height)};

  background-color: #{token(background-color)};

  overflow: hidden; // TODO: organize this

  &::after {
    content: '';

    position: absolute;

    border-radius: 50%;
    inline-size: 16px;
    block-size: 16px;

    border-width: 6px;
    border-color: #{token(primary-color)};
    border-style: solid;
    background-color: transparent;

    transition-duration: 200ms;
    transition-timing-function: ease-out;
    transition-property: inline-size, block-size;

    // Using containment here should mitigate the hit to performance from animating the size
    contain: strict; // TODO: organize this
  }
}

@mixin background-checked {
  border-color: #{token(primary-color)};

  &::after {
    inline-size: 0px;
    block-size: 0px;
  }
}

@mixin label {
  @include typography.style(label);

  cursor: default;

  &:empty {
    display: none;
  }
}